{"version":3,"file":"static/js/960.6775500a.chunk.js","mappings":"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","sources":["webpack://phonebook-app/./src/components/pages/Contacts/Contacts.module.css?4151","webpack://phonebook-app/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://phonebook-app/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://phonebook-app/./src/components/ContactList/ContactList.module.css?1ce0","webpack://phonebook-app/./src/components/ElementContacts/ElementContacts.module.css?bd5b","components/ElementContacts/ElementContacts.jsx","redux/Contacts/selectors.js","webpack://phonebook-app/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__UZGa8\",\"title\":\"Contacts_title__9s9c7\",\"subtitle\":\"Contacts_subtitle__bVnjB\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__PfUhs\",\"label\":\"ContactForm_label__5RBhc\",\"input\":\"ContactForm_input__8jdRE\",\"button\":\"ContactForm_button__ntoCo\"};","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from '@mui/material';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport css from './ContactForm.module.css';\r\nimport { createContactThunk } from 'redux/Contacts/thunks';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumder] = useState('');\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumder(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    for (let i = 0; i < contacts.length; i++) {\r\n      const element = contacts[i];\r\n\r\n      if (element.name === name) {\r\n        toast.error(`${name} is already in contacts.`);\r\n        return;\r\n      }\r\n\r\n      if (element.number === number) {\r\n        toast.error(`${number} is already in contacts.`);\r\n        return;\r\n      }\r\n    }\r\n    dispatch(createContactThunk({ name, number }));\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumder('');\r\n  };\r\n\r\n  return (\r\n    <form className={css.form} onSubmit={handleSubmit}>\r\n      <label className={css.label}>\r\n        Name\r\n        <br />\r\n        <input\r\n          className={css.input}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я\\s\\-']+$\"\r\n          required\r\n          placeholder=\"Enter name\"\r\n        />\r\n      </label>\r\n      <label className={css.label}>\r\n        <br />\r\n        Number\r\n        <br />\r\n        <input\r\n          className={css.input}\r\n          type=\"tel\"\r\n          value={number}\r\n          onChange={handleInputChange}\r\n          name=\"number\"\r\n          pattern=\"^[0-9\\-]+$\"\r\n          required\r\n          placeholder=\"Enter phone number\"\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={css.button}>\r\n        Add Contact\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__MRcZp\",\"label\":\"Filter_label__7but3\",\"input\":\"Filter_input__uthk9\"};","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport css from './Filter.module.css';\r\nimport { setFilter } from 'redux/Filter/filterSlice';\r\n\r\nexport function Filter() {\r\n  const filter = useSelector(state => state.filter.value);\r\n  const dispatch = useDispatch();\r\n  const handleChange = e => {\r\n    dispatch(setFilter(e.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <div className={css.filter}>\r\n      <label className={css.label}>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          className={css.input}\r\n          value={filter}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__naLAs\",\"text\":\"ContactList_text__UzyRD\"};","// extracted by mini-css-extract-plugin\nexport default {\"element\":\"ElementContacts_element__5Vl7Y\",\"name\":\"ElementContacts_name__SrwLL\",\"tel\":\"ElementContacts_tel__5LJad\",\"btnDelete\":\"ElementContacts_btnDelete__jbU-P\",\"icon\":\"ElementContacts_icon__kCGtm\"};","import PropTypes from 'prop-types';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport css from './ElementContacts.module.css';\r\n\r\nexport function ElementContacts({ contact, onDeleteContact }) {\r\n  return (\r\n    <p className={css.element}>\r\n      <span className={css.name}>{contact.name}</span>\r\n      <span className={css.tel}>{contact.number}</span>\r\n      <button type=\"button\" className={css.btnDelete} onClick={() => onDeleteContact(contact._id)}>\r\n        <DeleteIcon className={css.icon} />\r\n      </button>\r\n    </p>\r\n  );\r\n}\r\n\r\nElementContacts.propTypes = {\r\n  contact: PropTypes.shape({\r\n    _id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","export const getStateContacts = state => state.contacts;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__CMecv\"};","import React from 'react';\r\nimport { Hourglass } from 'react-loader-spinner';\r\n\r\nimport styles from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <Hourglass\r\n        visible={true}\r\n        height=\"50\"\r\n        width=\"50\"\r\n        ariaLabel=\"hourglass-loading\"\r\n        wrapperStyle={{}}\r\n        wrapperClass=\"\"\r\n        colors={['#306cce', '#72a1ed']}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport css from './ContactList.module.css';\r\nimport { ElementContacts } from 'components/ElementContacts/ElementContacts';\r\nimport { getStateContacts } from 'redux/Contacts/selectors';\r\nimport { deleteContactThunk, getContactsThunk } from 'redux/Contacts/thunks';\r\nimport Loader from 'components/Loader/Loader';\r\n\r\nexport function ContactList() {\r\n  const filter = useSelector(state => state.filter.value);\r\n  const contacts = useSelector(state => state.contacts.items);\r\n\r\n  const getFilteredContacts = () => {\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n    return contacts.filter(contact => contact.name.toLocaleLowerCase().includes(normalizedFilter));\r\n  };\r\n\r\n  const filteredContacts = getFilteredContacts();\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoading, error } = useSelector(getStateContacts);\r\n\r\n  const handleDeleteContact = async contactId => {\r\n    await dispatch(deleteContactThunk(contactId));\r\n    await dispatch(getContactsThunk());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getContactsThunk());\r\n  }, [contacts.length, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      {error && <b>{error}</b>}\r\n      {!isLoading &&\r\n        (filteredContacts.length > 0 ? (\r\n          <ul className={css.list}>\r\n            {filteredContacts.map(item => (\r\n              <li key={item._id}>\r\n                <ElementContacts contact={item} onDeleteContact={handleDeleteContact} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p className={css.text}>No contacts...</p>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n","import css from './Contacts.module.css';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport { Filter } from 'components/Filter/Filter';\r\nimport { ContactList } from 'components/ContactList/ContactList';\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <main className={css.contacts}>\r\n      <h1 className={css.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={css.subtitle}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </main>\r\n  );\r\n}\r\n"],"names":["ContactForm","name","setName","useState","number","setNumder","contacts","useSelector","state","items","dispatch","useDispatch","handleInputChange","e","value","currentTarget","resetForm","_jsxs","className","css","onSubmit","preventDefault","i","length","element","toast","concat","createContactThunk","children","_jsx","type","onChange","pattern","required","placeholder","Button","variant","color","Filter","filter","setFilter","ElementContacts","_ref","contact","onDeleteContact","onClick","_id","DeleteIcon","getStateContacts","Loader","styles","Hourglass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ContactList","filteredContacts","getFilteredContacts","normalizedFilter","toLocaleLowerCase","includes","isLoading","error","handleDeleteContact","async","deleteContactThunk","contactId","getContactsThunk","useEffect","_Fragment","map","item","Contacts"],"sourceRoot":""}