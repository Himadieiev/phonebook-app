{"version":3,"file":"static/js/419.049d3f7f.chunk.js","mappings":"2MACA,SAAgB,UAAY,yBAAyB,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,uB,wBCQpI,SAASA,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,IAEnCG,EAAeC,IAAkC,IAA/BC,QAAQ,KAAEC,EAAI,MAAEC,IAASH,EAC/C,OAAQE,GACN,IAAK,QACH,OAAOP,EAASQ,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,OACJ,EAoBF,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,UAAcC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,MAAUC,SAAC,aAC1BH,EAAAA,EAAAA,MAAA,QAAMK,SApBWC,UACnBC,EAAEC,iBAEF,UACQtB,GAASuB,EAAAA,EAAAA,IAAW,CAAEnB,QAAOG,cAEnCiB,YAAW,KACTtB,EAAS,IAAI,GACZ,KAEHG,EAAS,IACTG,EAAY,GACd,CAAE,MAAOiB,GAAM,IAADC,EACZC,EAAAA,GAAAA,OAAe,OAAHF,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKG,YAAI,IAAAF,OAAN,EAAHA,EAAWG,UAAWJ,EAAIK,MACxC,GAMgCC,aAAa,MAAMhB,UAAWC,EAAAA,KAASC,SAAA,EACnEC,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACRC,GAAG,uBACHC,MAAM,QACNC,KAAK,QACLvB,KAAK,QACLC,MAAOT,EACP2B,aAAa,gBACbK,SAAU3B,EACVM,UAAWC,EAAAA,SAEbE,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACRC,GAAG,0BACHC,MAAM,WACNC,KAAK,WACLvB,KAAK,WACLC,MAAON,EACPwB,aAAa,mBACbK,SAAU3B,EACVM,UAAWC,EAAAA,SAEbE,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAACF,KAAK,SAASG,QAAQ,YAAYC,MAAM,UAAUxB,UAAWC,EAAAA,OAAWC,SAAC,gBAMzF,C","sources":["webpack://phonebook-app/./src/components/pages/LogIn/LogIn.module.css?2387","components/pages/LogIn/LogIn.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LogIn_container__bBfQL\",\"title\":\"LogIn_title__6j+6h\",\"form\":\"LogIn_form__Zl9Qu\",\"input\":\"LogIn_input__DvIVX\",\"button\":\"LogIn_button__jjC9r\"};","import React, { useState } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { loginThunk } from 'redux/Auth/thunks';\r\n\r\nimport css from './LogIn.module.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function LogIn() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await dispatch(loginThunk({ email, password }));\r\n\r\n      setTimeout(() => {\r\n        navigate('/');\r\n      }, 1000);\r\n\r\n      setEmail('');\r\n      setPassword('');\r\n    } catch (err) {\r\n      toast.error(err?.data?.message || err.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className={css.container}>\r\n      <h1 className={css.title}>Sign In</h1>\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\" className={css.form}>\r\n        <TextField\r\n          id=\"outlined-email-input\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          autoComplete=\"current-email\"\r\n          onChange={handleChange}\r\n          className={css.input}\r\n        />\r\n        <TextField\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          autoComplete=\"current-password\"\r\n          onChange={handleChange}\r\n          className={css.input}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={css.button}>\r\n          Log In\r\n        </Button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n"],"names":["LogIn","dispatch","useDispatch","navigate","useNavigate","email","setEmail","useState","password","setPassword","handleChange","_ref","target","name","value","_jsxs","className","css","children","_jsx","onSubmit","async","e","preventDefault","loginThunk","setTimeout","err","_err$data","toast","data","message","error","autoComplete","TextField","id","label","type","onChange","Button","variant","color"],"sourceRoot":""}